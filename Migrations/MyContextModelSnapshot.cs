// <auto-generated />
using System;
using Burritopia.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Burritopia.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Burritopia.Models.Burrito", b =>
                {
                    b.Property<int>("BurritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BeansId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("DoubleMeat")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("ProteinId")
                        .HasColumnType("int");

                    b.Property<int>("RiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BurritoId");

                    b.HasIndex("BeansId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProteinId");

                    b.HasIndex("RiceId");

                    b.ToTable("Burritos");
                });

            modelBuilder.Entity("Burritopia.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("InStock")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ingredient");
                });

            modelBuilder.Entity("Burritopia.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Paid")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Burritopia.Models.Topping", b =>
                {
                    b.Property<int>("ToppingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddOnId")
                        .HasColumnType("int");

                    b.Property<int>("BurritoId")
                        .HasColumnType("int");

                    b.HasKey("ToppingId");

                    b.HasIndex("AddOnId");

                    b.HasIndex("BurritoId");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("Burritopia.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Burritopia.Models.AddOn", b =>
                {
                    b.HasBaseType("Burritopia.Models.Ingredient");

                    b.HasDiscriminator().HasValue("AddOn");
                });

            modelBuilder.Entity("Burritopia.Models.Beans", b =>
                {
                    b.HasBaseType("Burritopia.Models.Ingredient");

                    b.HasDiscriminator().HasValue("Beans");
                });

            modelBuilder.Entity("Burritopia.Models.Protein", b =>
                {
                    b.HasBaseType("Burritopia.Models.Ingredient");

                    b.Property<double>("DoubleMeatPrice")
                        .HasColumnType("double");

                    b.HasDiscriminator().HasValue("Protein");
                });

            modelBuilder.Entity("Burritopia.Models.Rice", b =>
                {
                    b.HasBaseType("Burritopia.Models.Ingredient");

                    b.HasDiscriminator().HasValue("Rice");
                });

            modelBuilder.Entity("Burritopia.Models.Burrito", b =>
                {
                    b.HasOne("Burritopia.Models.Beans", "Beans")
                        .WithMany()
                        .HasForeignKey("BeansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Burritopia.Models.Order", null)
                        .WithMany("Burritos")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Burritopia.Models.Protein", "Protein")
                        .WithMany()
                        .HasForeignKey("ProteinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Burritopia.Models.Rice", "Rice")
                        .WithMany()
                        .HasForeignKey("RiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beans");

                    b.Navigation("Protein");

                    b.Navigation("Rice");
                });

            modelBuilder.Entity("Burritopia.Models.Topping", b =>
                {
                    b.HasOne("Burritopia.Models.AddOn", "AddOn")
                        .WithMany()
                        .HasForeignKey("AddOnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Burritopia.Models.Burrito", "Burrito")
                        .WithMany("Toppings")
                        .HasForeignKey("BurritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddOn");

                    b.Navigation("Burrito");
                });

            modelBuilder.Entity("Burritopia.Models.Burrito", b =>
                {
                    b.Navigation("Toppings");
                });

            modelBuilder.Entity("Burritopia.Models.Order", b =>
                {
                    b.Navigation("Burritos");
                });
#pragma warning restore 612, 618
        }
    }
}
